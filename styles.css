:root {
    --pale-blue: #DDE6ED;
    --muted-blue: #9DB2BF;
    --steel-blue: #526D82;
    --deep-navy: #27374D;
    --primary-red: #E52020;
    --forest-green: #3F7D58;
}

body {
    background-color: var(--pale-blue);
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    color: var(--deep-navy);
}

.main-action-container {
    width: 30rem;
    height: 45rem;
    background-color: var(--muted-blue);
    border-radius: 2rem;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-direction: column;
    padding: 2rem 1rem;
    box-sizing: border-box;
}

.main-btn {
    width: 15rem;
    height: 3rem;
    font-size: 1.5rem;
    border-radius: 1.5rem;
    border: 0;
    background-color: var(--steel-blue);
    color: white;
}

.main-btn:hover,
.answer-btn:hover {
    background-color: var(--deep-navy);
    cursor: pointer;
}

.input-div {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

#header-title{
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 80%;
}

label,
p {
    width: fit-content;
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
}

input[type="text"] {
    width: 15rem;
    height: 2.5rem;
    border-radius: 1.5rem;
    border: 0;
    padding: 0.5rem;
    box-sizing: border-box;
}

input[type="range"] {
    cursor: pointer;
    width: 12rem;
    height: 2rem;
}

input[type="range"]::-webkit-slider-runnable-track {
    background: var(--deep-navy);
    border-radius: 1rem
}

input[type="range"]::-webkit-slider-thumb {
    background: var(--muted-blue);
}

h1,
h3 {
    text-align: center
}

#question-text{
    font-size: 1.5rem;
}

#play-game-container {
    display: none;
}

.answer-btn {
    width: 20rem;
    height: 3rem;
    font-size: 1.2rem;
    border-radius: 1.5rem;
    border: 0;
    padding: 0 1rem;
    box-sizing: border-box;
    background-color: var(--steel-blue);
    color: white;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.answer-container {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-direction: column;
    height: 20rem;
}

#header-top-container {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#exit-btn {
    width: 3rem;
    height: 1.5rem;
    background-color: var(--steel-blue);
    border: 0;
    border-radius: 1rem;
    color: white;
    font-weight: bolder;
}

#exit-btn:hover {
    cursor: pointer;
    background-color: var(--deep-navy);
}

#question-number-header{
    font-weight: bold;
}

#dificulty-paragraph{
    font-size: 1rem;
    font-weight: bolder;
}

.dropdown-content {
    display: none;
    position: absolute;
    background-color: var(--pale-blue);
    min-width: 15rem;
    z-index: 1;
}

.dropdown-content-padding{
    padding: 1rem;
    box-sizing: border-box;
}

.dropdown-content button {
    color: black;
    padding: 1rem 1.2rem;
    text-decoration: none;
    display: block;
    width: 100%;
    border: 0;
}

.dropdown-content form input,label{
    margin: 1rem;
    cursor: pointer;
}

.dropdown-content button:hover {
    background-color: var(--steel-blue);
    color: white;
    cursor: pointer;
}

.dropdown:hover .dropdown-content {
    display: block;
}

.dropdown:hover .dropbtn {
    background-color: var(--deep-navy)
}

.wrong-answer-btn{
    background-color: var(--primary-red);
}

.correct-answer-btn{
    background-color: var(--forest-green);
}

.answer-btn:disabled {
    pointer-events: none;
    opacity: 0.7; 
    cursor: default; 
}

.answer-btn:disabled:hover {
    background-color: #ccc;
}

#main-finish-container{
    display: none;
    flex-direction: column;
}

#finish-container{
    border: 1px solid black;
    border-radius: 2rem;
    width: 90%;
    padding: 0 1rem;
    box-sizing: border-box;
}

#finish-container h2, h3, h4{
    text-align: center;
}

#finish-quote{
    font-size: 1.3rem;
}

#finish-score{
    font-size: 2rem;
}


/********************************************************************************************/
.timer-fade .main-action-container{
    opacity: 0; 
    transition: opacity 2.5s ease-in-out;
}

.show {
    opacity: 1;
}

.timer>svg {
    width: 6rem;
    height: 6rem;
}

.timer>svg>circle {
    fill: none;
    stroke-opacity: 0.3;
    stroke: var(--deep-navy);
    stroke-width: 10;
    transform-origin: center center;
    transform: rotate(-90deg);
}

.timer>svg>circle+circle {
    stroke-dasharray: 1;
    stroke-dashoffset: 1;
    stroke-linecap: round;
    stroke-opacity: 1;
}

.timer>svg>text {
    font-size: 2rem;
    color: var(--deep-navy);
}

.timer.animatable > svg > circle + circle {
    transition: stroke-dashoffset 0.3s ease;
}